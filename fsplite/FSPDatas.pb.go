// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.1
// 	protoc        v3.11.4
// source: FSPDatas.proto

package fsplite

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FSPParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host                string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Sid                 uint32 `protobuf:"varint,3,opt,name=sid,proto3" json:"sid,omitempty"`
	ServerFrameInterval int32  `protobuf:"varint,4,opt,name=serverFrameInterval,proto3" json:"serverFrameInterval,omitempty"`
	ServerTimeout       int32  `protobuf:"varint,5,opt,name=serverTimeout,proto3" json:"serverTimeout,omitempty"`
	// clientFrameRateMultiple - rate between client and server frames
	ClientFrameRateMultiple int32 `protobuf:"varint,6,opt,name=clientFrameRateMultiple,proto3" json:"clientFrameRateMultiple,omitempty"`
	AuthID                  int32 `protobuf:"varint,7,opt,name=authID,proto3" json:"authID,omitempty"`
	UseLocal                bool  `protobuf:"varint,8,opt,name=useLocal,proto3" json:"useLocal,omitempty"`
	MaxFrameID              int32 `protobuf:"varint,9,opt,name=maxFrameID,proto3" json:"maxFrameID,omitempty"`
	EnableSpeedUp           bool  `protobuf:"varint,10,opt,name=enableSpeedUp,proto3" json:"enableSpeedUp,omitempty"`
	DefaultSpeed            int32 `protobuf:"varint,11,opt,name=defaultSpeed,proto3" json:"defaultSpeed,omitempty"`
	// jitterBufferSize - buffer size
	JitterBufferSize int32 `protobuf:"varint,12,opt,name=jitterBufferSize,proto3" json:"jitterBufferSize,omitempty"`
	EnableAutoBuffer bool  `protobuf:"varint,13,opt,name=enableAutoBuffer,proto3" json:"enableAutoBuffer,omitempty"`
}

func (x *FSPParam) Reset() {
	*x = FSPParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FSPDatas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSPParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSPParam) ProtoMessage() {}

func (x *FSPParam) ProtoReflect() protoreflect.Message {
	mi := &file_FSPDatas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSPParam.ProtoReflect.Descriptor instead.
func (*FSPParam) Descriptor() ([]byte, []int) {
	return file_FSPDatas_proto_rawDescGZIP(), []int{0}
}

func (x *FSPParam) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FSPParam) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *FSPParam) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *FSPParam) GetServerFrameInterval() int32 {
	if x != nil {
		return x.ServerFrameInterval
	}
	return 0
}

func (x *FSPParam) GetServerTimeout() int32 {
	if x != nil {
		return x.ServerTimeout
	}
	return 0
}

func (x *FSPParam) GetClientFrameRateMultiple() int32 {
	if x != nil {
		return x.ClientFrameRateMultiple
	}
	return 0
}

func (x *FSPParam) GetAuthID() int32 {
	if x != nil {
		return x.AuthID
	}
	return 0
}

func (x *FSPParam) GetUseLocal() bool {
	if x != nil {
		return x.UseLocal
	}
	return false
}

func (x *FSPParam) GetMaxFrameID() int32 {
	if x != nil {
		return x.MaxFrameID
	}
	return 0
}

func (x *FSPParam) GetEnableSpeedUp() bool {
	if x != nil {
		return x.EnableSpeedUp
	}
	return false
}

func (x *FSPParam) GetDefaultSpeed() int32 {
	if x != nil {
		return x.DefaultSpeed
	}
	return 0
}

func (x *FSPParam) GetJitterBufferSize() int32 {
	if x != nil {
		return x.JitterBufferSize
	}
	return 0
}

func (x *FSPParam) GetEnableAutoBuffer() bool {
	if x != nil {
		return x.EnableAutoBuffer
	}
	return false
}

// FSPMessage :
type FSPMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerID int32  `protobuf:"varint,1,opt,name=playerID,proto3" json:"playerID,omitempty"`
	Content  string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	FrameID  int32  `protobuf:"varint,3,opt,name=frameID,proto3" json:"frameID,omitempty"`
	Cmd      int32  `protobuf:"varint,4,opt,name=cmd,proto3" json:"cmd,omitempty"`
}

func (x *FSPMessage) Reset() {
	*x = FSPMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FSPDatas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSPMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSPMessage) ProtoMessage() {}

func (x *FSPMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FSPDatas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSPMessage.ProtoReflect.Descriptor instead.
func (*FSPMessage) Descriptor() ([]byte, []int) {
	return file_FSPDatas_proto_rawDescGZIP(), []int{1}
}

func (x *FSPMessage) GetPlayerID() int32 {
	if x != nil {
		return x.PlayerID
	}
	return 0
}

func (x *FSPMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *FSPMessage) GetFrameID() int32 {
	if x != nil {
		return x.FrameID
	}
	return 0
}

func (x *FSPMessage) GetCmd() int32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

// FSPDataC2S :
type FSPDataC2S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid  uint32        `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Msgs []*FSPMessage `protobuf:"bytes,2,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *FSPDataC2S) Reset() {
	*x = FSPDataC2S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FSPDatas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSPDataC2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSPDataC2S) ProtoMessage() {}

func (x *FSPDataC2S) ProtoReflect() protoreflect.Message {
	mi := &file_FSPDatas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSPDataC2S.ProtoReflect.Descriptor instead.
func (*FSPDataC2S) Descriptor() ([]byte, []int) {
	return file_FSPDatas_proto_rawDescGZIP(), []int{2}
}

func (x *FSPDataC2S) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *FSPDataC2S) GetMsgs() []*FSPMessage {
	if x != nil {
		return x.Msgs
	}
	return nil
}

// FSPDataS2C :
type FSPDataS2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames []*FSPFrame `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
}

func (x *FSPDataS2C) Reset() {
	*x = FSPDataS2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FSPDatas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSPDataS2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSPDataS2C) ProtoMessage() {}

func (x *FSPDataS2C) ProtoReflect() protoreflect.Message {
	mi := &file_FSPDatas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSPDataS2C.ProtoReflect.Descriptor instead.
func (*FSPDataS2C) Descriptor() ([]byte, []int) {
	return file_FSPDatas_proto_rawDescGZIP(), []int{3}
}

func (x *FSPDataS2C) GetFrames() []*FSPFrame {
	if x != nil {
		return x.Frames
	}
	return nil
}

// FSPFrame :
type FSPFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameID int32         `protobuf:"varint,1,opt,name=frameID,proto3" json:"frameID,omitempty"`
	Msgs    []*FSPMessage `protobuf:"bytes,2,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *FSPFrame) Reset() {
	*x = FSPFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FSPDatas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSPFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSPFrame) ProtoMessage() {}

func (x *FSPFrame) ProtoReflect() protoreflect.Message {
	mi := &file_FSPDatas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSPFrame.ProtoReflect.Descriptor instead.
func (*FSPFrame) Descriptor() ([]byte, []int) {
	return file_FSPDatas_proto_rawDescGZIP(), []int{4}
}

func (x *FSPFrame) GetFrameID() int32 {
	if x != nil {
		return x.FrameID
	}
	return 0
}

func (x *FSPFrame) GetMsgs() []*FSPMessage {
	if x != nil {
		return x.Msgs
	}
	return nil
}

var File_FSPDatas_proto protoreflect.FileDescriptor

var file_FSPDatas_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x46, 0x53, 0x50, 0x44, 0x61, 0x74, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x66, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x65, 0x22, 0xcc, 0x03, 0x0a, 0x08, 0x46, 0x53,
	0x50, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x69, 0x64,
	0x12, 0x30, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x55, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x55, 0x70, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6a, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x6e, 0x0a, 0x0a, 0x46, 0x53, 0x50, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x22, 0x47, 0x0a, 0x0a, 0x46, 0x53, 0x50, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x32, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x65,
	0x2e, 0x46, 0x53, 0x50, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6d, 0x73, 0x67,
	0x73, 0x22, 0x37, 0x0a, 0x0a, 0x46, 0x53, 0x50, 0x44, 0x61, 0x74, 0x61, 0x53, 0x32, 0x43, 0x12,
	0x29, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x66, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x46, 0x53, 0x50, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x08, 0x46, 0x53,
	0x50, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x12, 0x27, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x66, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x46, 0x53, 0x50, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x66,
	0x73, 0x70, 0x6c, 0x69, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_FSPDatas_proto_rawDescOnce sync.Once
	file_FSPDatas_proto_rawDescData = file_FSPDatas_proto_rawDesc
)

func file_FSPDatas_proto_rawDescGZIP() []byte {
	file_FSPDatas_proto_rawDescOnce.Do(func() {
		file_FSPDatas_proto_rawDescData = protoimpl.X.CompressGZIP(file_FSPDatas_proto_rawDescData)
	})
	return file_FSPDatas_proto_rawDescData
}

var file_FSPDatas_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_FSPDatas_proto_goTypes = []interface{}{
	(*FSPParam)(nil),   // 0: fsplite.FSPParam
	(*FSPMessage)(nil), // 1: fsplite.FSPMessage
	(*FSPDataC2S)(nil), // 2: fsplite.FSPDataC2S
	(*FSPDataS2C)(nil), // 3: fsplite.FSPDataS2C
	(*FSPFrame)(nil),   // 4: fsplite.FSPFrame
}
var file_FSPDatas_proto_depIdxs = []int32{
	1, // 0: fsplite.FSPDataC2S.msgs:type_name -> fsplite.FSPMessage
	4, // 1: fsplite.FSPDataS2C.frames:type_name -> fsplite.FSPFrame
	1, // 2: fsplite.FSPFrame.msgs:type_name -> fsplite.FSPMessage
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_FSPDatas_proto_init() }
func file_FSPDatas_proto_init() {
	if File_FSPDatas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_FSPDatas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSPParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FSPDatas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSPMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FSPDatas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSPDataC2S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FSPDatas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSPDataS2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FSPDatas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSPFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_FSPDatas_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FSPDatas_proto_goTypes,
		DependencyIndexes: file_FSPDatas_proto_depIdxs,
		MessageInfos:      file_FSPDatas_proto_msgTypes,
	}.Build()
	File_FSPDatas_proto = out.File
	file_FSPDatas_proto_rawDesc = nil
	file_FSPDatas_proto_goTypes = nil
	file_FSPDatas_proto_depIdxs = nil
}
